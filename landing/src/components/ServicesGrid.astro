---
import {Icon} from 'astro-icon/components'

const subscriptionPlans = [
    {
        name: "Standard",
        price: {
            monthly: 5999,
            quarterly: 5699,
            annually: 5299,
        },
        concurrentTasks: 1,
    },
    {
        name: "Pro",
        price: {
            monthly: 8499,
            quarterly: 7999,
            annually: 7499,
        },
        concurrentTasks: 2,
    }
];

const readySolutions = [
    {
        name: "MVP Launchpad",
        price: 7999,
        description: "Perfect for startups and small businesses looking to validate their ideas quickly.",
        features: [
            "Custom designed responsive web app",
            "Core feature implementation",
            "Basic user authentication",
            "Data storage and retrieval",
        ],
        deliveryTime: "4-6 weeks",
    },
    {
        name: "Scale-up Accelerator",
        price: 16999,
        description: "Ideal for businesses ready to expand their digital footprint and capabilities.",
        features: [
            "Advanced web application",
            "Complex business logic implementation",
            "Third-party API integrations",
            "Performance optimization",
            "Basic analytics setup",
        ],
        deliveryTime: "8-10 weeks",
    },
    {
        name: "Enterprise Powerhouse",
        price: 37999,
        description: "Comprehensive solution for large-scale businesses with complex requirements.",
        features: [
            "Fully custom enterprise-grade application",
            "Advanced user roles and permissions",
            "Scalable architecture",
            "Comprehensive testing suite",
            "DevOps setup and deployment",
        ],
        deliveryTime: "12-16 weeks",
    }
];
---

<div class="mb-4 relative">
    <h2 class="text-2xl md:text-3xl font-bold text-black mb-6 transform -rotate-2 relative z-10 inline-block bg-yellow-300 px-4 py-2 border-4 border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]">
        Developer as Subscription
    </h2>
    <div class="absolute top-0 right-0 w-12 h-12 bg-yellow-400 border-4 border-black transform rotate-12 translate-x-2 -translate-y-2 z-0"></div>
</div>

<div class="max-w-2xl mx-auto mb-16">
    <div class="bg-white border-4 border-black p-6 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] transform rotate-1 relative">
        <div class="product-toggle flex flex-wrap mb-4 border-4 border-black">
            <button class="flex-1 py-2 px-4 font-bold product-btn active bg-blue-400 text-white"
                    data-product="standard">Standard
            </button>
            <button class="flex-1 py-2 px-4 font-bold product-btn bg-gray-200 text-gray-600" data-product="pro">Pro
            </button>
        </div>

        {subscriptionPlans.map((plan, index) => (
                <div class={`product-content ${index === 0 ? 'standard' : 'pro'} ${index === 0 ? '' : 'hidden'}`}>
                    <p class="text-3xl font-bold text-blue-500 mb-4">
                        <span class="price monthly">${plan.price.monthly}</span>
                        <span class="text-lg font-normal">/month</span>
                        <span class="savings quarterly hidden ml-2 inline-block">
                            <span class="text-sm font-bold bg-green-300 text-black px-2 py-1 border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,1)] transform -rotate-1">
                                Save ${(plan.price.monthly - plan.price.quarterly).toFixed(2)}/month
                            </span>
                        </span>
                        <span class="savings annually hidden ml-2 inline-block">
                            <span class="text-sm font-bold bg-green-300 text-black px-2 py-1 border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,1)] transform rotate-1">
                                Save ${(plan.price.monthly - plan.price.annually).toFixed(2)}/month
                            </span>
                        </span>
                    </p>

                    <p class="text-lg font-bold text-black mb-4">{plan.concurrentTasks}
                        task{plan.concurrentTasks > 1 ? 's' : ''} at a time</p>
                    <div class="flex items-center justify-center gap-2 p-3 bg-blue-100 border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]">
                        <Icon name="tabler:clock" class="w-6 h-6"/>
                        <p class="text-lg font-bold text-black">Avg. solution delivery: 24-48h</p>
                    </div>
                    <ul class="list-disc list-inside my-4 font-bold">
                        <li>Unlimited requests</li>
                        <li>Unlimited users</li>
                        <li>Unlimited features/requirements</li>
                        <li>Unlimited refactors/bug fixes</li>
                        <li>Cancel or pause anytime</li>
                        <li>No hidden fees or penalties</li>
                    </ul>
                    <a href="/contact"
                       class="inline-block w-full text-center bg-green-500 font-bold py-3 px-6 border-black border-4 shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,1)] transition-all duration-300 text-xl hover:bg-green-600 text-white">
                        Subscribe Now
                    </a>
                </div>
        ))}
    </div>
</div>

<div class="mb-4 relative">
    <h2 class="text-2xl md:text-3xl font-bold text-black mb-6 transform rotate-1 relative z-10 inline-block bg-yellow-300 px-4 py-2 border-4 border-black shadow-[4px_4px_0px_0px_rgba(0,0,0,1)]">
        App Packages
    </h2>
</div>

<div class="max-w-2xl mx-auto mb-16">
    <div class="bg-white border-4 border-black p-6 shadow-[8px_8px_0px_0px_rgba(0,0,0,1)] transform rotate-1 relative">
        <div class="solution-toggle flex flex-wrap mb-4 border-4 border-black">
            <button class="flex-1 py-2 px-4 font-bold solution-btn active bg-blue-400 text-white"
                    data-solution="mvp">MVP
            </button>
            <button class="flex-1 py-2 px-4 font-bold solution-btn bg-gray-200 text-gray-600"
                    data-solution="scaleup">Scale-up
            </button>
            <button class="flex-1 py-2 px-4 font-bold solution-btn bg-gray-200 text-gray-600"
                    data-solution="enterprise">Enterprise
            </button>
        </div>

        {readySolutions.map((solution, index) => (
                <div class={`solution-content ${index === 0 ? 'mvp' : index === 1 ? 'scaleup' : 'enterprise'} ${index === 0 ? '' : 'hidden'}`}>
                    <p class="text-3xl font-bold text-blue-500 mb-4">${solution.price}</p>
                    <p class="text-black mb-4">{solution.description}</p>
                    <ul class="list-disc list-inside mb-4 font-bold">
                        {solution.features.map((feature) => (
                                <li class="text-black">{feature}</li>
                        ))}
                    </ul>
                    <div class="flex items-center justify-center gap-2 p-3 bg-blue-100 border-2 border-black shadow-[2px_2px_0px_0px_rgba(0,0,0,1)]">
                        <Icon name="tabler:clock" class="w-6 h-6"/>
                        <p class="text-lg font-bold text-black">Estimated delivery: {solution.deliveryTime}</p>
                    </div>
                    <a href="/contact"
                       class="mt-6 inline-block w-full text-center bg-green-500 font-bold py-3 px-6 border-black border-4 shadow-[4px_4px_0px_0px_rgba(0,0,0,1)] hover:shadow-[2px_2px_0px_0px_rgba(0,0,0,1)] transition-all duration-300 text-xl hover:bg-green-600 text-white">
                        Get Started
                    </a>
                </div>
        ))}
    </div>
</div>
<script>
    function initializeToggles() {
        const productBtns = document.querySelectorAll('.product-btn');
        const solutionBtns = document.querySelectorAll('.solution-btn');


        productBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const product = btn.getAttribute('data-product');

                productBtns.forEach(b => {
                    b.classList.remove('active', 'bg-blue-400', 'text-white');
                    b.classList.add('bg-gray-200', 'text-gray-600');
                });
                btn.classList.add('active', 'bg-blue-400', 'text-white');
                btn.classList.remove('bg-gray-200', 'text-gray-600');

                document.querySelectorAll('.product-content').forEach(content => {
                    content.classList.add('hidden');
                });
                document.querySelector(`.product-content.${product}`)?.classList.remove('hidden');
            });
        });

        solutionBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                const solution = btn.getAttribute('data-solution');
                solutionBtns.forEach(b => {
                    b.classList.remove('active', 'bg-blue-400', 'text-white');
                    b.classList.add('bg-gray-200', 'text-gray-600');
                });
                btn.classList.add('active', 'bg-blue-400', 'text-white');
                btn.classList.remove('bg-gray-200', 'text-gray-600');

                document.querySelectorAll('.solution-content').forEach(content => {
                    content.classList.add('hidden');
                });
                document.querySelector(`.solution-content.${solution}`)?.classList.remove('hidden');
            });
        });
    }

    document.addEventListener('DOMContentLoaded', initializeToggles);
    document.addEventListener('astro:page-load', initializeToggles);
</script>
